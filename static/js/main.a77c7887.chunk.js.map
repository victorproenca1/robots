{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","robots.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","nome","username","App","onSearchChange","event","setState","target","value","state","filteredRobots","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wNAeeA,EAbF,SAACC,GACV,IAAQC,EAAqBD,EAArBC,KAAOC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACtB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCMLK,EAZE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OAAQ,cAAC,EAAD,CAAcR,GAAIK,EAAOG,GAAGR,GAAIF,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,OAA5DS,SCExBC,EARG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAAmCW,KAAK,SAASC,YAAY,oBAAiBC,SAAUH,OCLxGN,EAAS,CAClB,CACIL,GAAI,EACJe,KAAM,2BACNC,SAAU,gBACVjB,MAAO,yBAEX,CACIC,GAAI,EACJe,KAAM,mCACNC,SAAU,aACVjB,MAAO,wBAEX,CACIC,GAAI,EACJe,KAAM,4CACNC,SAAU,SACVjB,MAAO,oBAEX,CACIC,GAAI,EACJe,KAAM,iCACNC,SAAU,oBACVjB,MAAO,+BCUAkB,G,wDAzBX,aAAgB,IAAD,8BACX,gBAMJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEV,YAAaS,EAAME,OAAOC,SAN1C,EAAKC,MAAQ,CACTlB,OAAQA,EACRK,YAAa,IAJN,E,0CAWf,WAAU,IAAD,OACCc,EAAiBC,KAAKF,MAAMlB,OAAOqB,QAAO,SAAArB,GAC5C,OAAOA,EAAOU,KAAKY,cAAcC,SAAS,EAAKL,MAAMb,YAAYiB,kBAErE,OACI,sBAAK1B,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWU,aAAcc,KAAKP,iBAC9B,cAAC,EAAD,CAAUb,OAAQmB,W,GApBhBK,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a77c7887.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    const { name , email, id } = props;\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user, i) =>{\r\n                    return (<Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>)\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='Procurar robÃ´s' onChange={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","export const robots = [\r\n    {\r\n        id: 1,\r\n        nome: 'Mechanized First Aid Bot',\r\n        username: 'first-aid-bot',\r\n        email: 'firstaidbot@gmail.com'\r\n    },\r\n    {\r\n        id: 2,\r\n        nome: 'Artificial Encryption Juggernaut',\r\n        username: 'encryption',\r\n        email: 'encryption@gmail.com'\r\n    },\r\n    {\r\n        id: 3,\r\n        nome: 'Extra-Terrestrial Human Protection Cyborg',\r\n        username: 'cyborg',\r\n        email: 'cyborg@gmail.com'\r\n    },\r\n    {\r\n        id: 4,\r\n        nome: 'Compact Life Protection Device',\r\n        username: 'protection-device',\r\n        email: 'protectiondevice@gmail.com'\r\n    },\r\n]","import React, {Component} from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport {robots} from './robots';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            robots: robots,\r\n            searchfield: ''\r\n        }\r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n        \r\n    }\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robots => {\r\n            return robots.nome.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        return(\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFinder</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <CardList robots={filteredRobots}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}